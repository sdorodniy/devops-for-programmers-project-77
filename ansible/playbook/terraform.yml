- hosts: localhost
  gather_facts: no
  tasks:
    - name: Crate token
      ansible.builtin.shell:
        cmd: "yc iam create-token"
      register: token
      ignore_errors: yes
      tags: 
      - plan
      - apply
    - name: Plan
      ansible.builtin.shell:
        chdir: ../../terraform
        cmd: "terraform plan \
          -var 'yandex_token={{ token.stdout }}' \
          -var 'yandex_cloud_id={{ yandex_cloud_id }}' \
          -var 'yandex_folder_id={{ yandex_folder_id }}' \
          -var 'yandex_zone={{ yandex_zone }}' \
          -var 'app-vm-user={{ vm_user }}' \
          -var 'ssh_key={{ lookup('ansible.builtin.file', '~/.ssh/id_rsa.pub') }}'
          -var 'app-vm-1_public_ip={{ hostvars.app1.ansible_host }}' \
          -var 'app-vm-2_public_ip={{ hostvars.app2.ansible_host }}' \
          -var 'db_user={{ redmine_db_username }}' \
          -var 'db_name={{ redmibe_db_database }}' \
          -var 'db_password={{ redmine_db_password }}' \
          -var 'datadog_api_key={{ datadog_api_key }}' \
          -var 'datadog_app_key={{ datadog_app_key }}' \
          -var 'datadog_site={{ datadog_site }}'"
      register: plan
      ignore_errors: yes
      tags: plan
    - name: Plan output
      ansible.builtin.debug:
        msg: "{{ plan.stdout_lines }}"
      tags: plan
    - name: Apply
      ansible.builtin.shell:
        chdir: ../../terraform
        cmd: "terraform apply \
          -auto-approve \
          -var 'yandex_token={{ token.stdout }}' \
          -var 'yandex_cloud_id={{ yandex_cloud_id }}' \
          -var 'yandex_folder_id={{ yandex_folder_id }}' \
          -var 'yandex_zone={{ yandex_zone }}' \
          -var 'app-vm-user={{ vm_user }}' \
          -var 'ssh_key={{ lookup('ansible.builtin.file', '~/.ssh/id_rsa.pub') }}'
          -var 'app-vm-1_public_ip={{ hostvars.app1.ansible_host }}' \
          -var 'app-vm-2_public_ip={{ hostvars.app2.ansible_host }}' \
          -var 'db_user={{ redmine_db_username }}' \
          -var 'db_name={{ redmibe_db_database }}' \
          -var 'db_password={{ redmine_db_password }}' \
          -var 'datadog_api_key={{ datadog_api_key }}' \
          -var 'datadog_app_key={{ datadog_app_key }}' \
          -var 'datadog_site={{ datadog_site }}'"
      register: apply
      ignore_errors: yes
      tags: apply
    - name: Apply output
      ansible.builtin.debug:
        msg: "{{ apply.stdout_lines }}"
      tags: apply
